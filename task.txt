
ТЗ на позицию Web-разработчик II.

Ориентировочно, выполнение всех частей задания должно занять от 2 до 5
часов.
Допускается вариант, при котором кандидат высылает результат выполнения
части 1 и 2.1., а после получения ответа о том, что результат принят и
успешно проверен, приступает к выполнению части 2.2.


Часть 1
Используя открытые методы (XML_daily и XML_dynamic) Центробанка РФ
(http://www.cbr.ru/development/SXML/) создать и заполнить Базу Данных.
БД заполняем данными минимум за 30 дней начиная с текущего дня.

В БД должна быть таблица currency c обязательными колонками:
valuteID - идентификатор валюты, который возвращает метод (пример:
R01010)
numCode - числовой код валюты (пример: 036)
сharCode - буквенный код валюты (пример: AUD)
name - имя валюты (пример: Австралийский доллар)
value - значение курса (пример: 43,9538)
date - дата публикации курса (может быть в UNIX-формате или ISO 8601)

Часть 2

2.1. Реализовать REST API метод, который вернет курс(ы) валюты для
переданного valueID за указанный период date (from&to) используя данные
из таблицы currency. Параметры передаем методом GET.

2.2. Реализовать 2 веб страницы:
1) Страница авторизации. Авторизация по логину и паролю. Учетные данные
могут быть статичными.
2) Главная страница (доступна только после авторизации). На странице
размещается таблица со списком валют и данными по этим валютам за
указанную в поле/селекторе дату.

Оформление страниц не имеет значения, но любая попытка стилизации (в том
числе с использованием фреймворков) будет плюсом для соискателя.

Высылаем Вам тестовое задание на позицию Web-разработчик V.

Ориентировочно выполнение всех частей задания должно занять 5 часов.
Допускается вариант, при котором кандидат высылает результат выполнения
части 1, а после получения ответа о том, что результат устроит,
приступает к выполнению частей 2 и 3.


Часть 1
Создать Базу Данных и скрипт ее заполнения, используя открытые методы
(XML_daily и XML_dynamic) Центробанка РФ
(http://www.cbr.ru/development/SXML/).
БД заполняем данными минимум за 30 дней начиная с текущего дня.
В БД должна быть таблица currency c обязательными колонками:
valuteID - идентификатор валюты, который возвращает метод (пример:
R01010)
numCode - числовой код валюты (пример: 036)
сharCode - буквенный код валюты (пример: AUD)
name - имя валюты (пример: Австралийский доллар)
value - значение курса (пример: 43,9538)
date - дата публикации курса (может быть в UNIX-формате или ISO 8601)
В случае возникновения исключений во время работы скрипта необходимо
обработать их и реализовать вывод ошибки пользователю.

Часть 2
Реализация REST API методов:
Реализовать REST API метод, который вернет курс(ы) валюты для
переданного valueID за указанный период date (from&to) используя данные
из таблицы currency. Параметры передаем методом GET;
Реализовать REST API метод добавления нового значения курса валюты;
Реализовать REST API метод редактирования значения курса валюты;
Реализовать REST API метод удаления значения курса валюты.
Часть 3
Реализация 2 веб страниц:
Страница авторизации. Авторизация по логину и паролю. Учетные данные
могут быть статичными.
Главная страница (доступна только после авторизации). На странице
размещается таблица со списком валют и данными по этим валютам за
указанную в поле/селекторе дату.
Оформление страниц не имеет значения, но любая попытка стилизации (в том
числе с использованием фреймворков) будет плюсом для соискателя.

Дополнительные пожелания к выполнению тестового задания:
1)Будет плюсом, если задание будет выполнено с использованием PSR-2 и
PSR-4.

2) В репозитории следует добавить файл README.md, содержащий инструкцию
как установить проект и просмотреть функциональность.

С уважением,
Анастасия